{"version":3,"sources":["missionary/impl/Mailbox.cljs"],"mappings":";AAGA,8BAAA,9BAAMA;AAAN,AAAA;;AAEA,AAAA;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,8CAAA,WAAAC,zDAASU;;AAAT,AAAA,IAAAT,SAAA;AAAA,AAAA,IAAAC,WAAA,CAAA,AAAA,mBAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAD,qCAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qCAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAE,MAAA,CAAA,8DAAA,CAAA,AAAA,mBAAA;;;;;AAAA,CAAA,AAAA,+CAAA,WAAAF,OAAAG,jEAASM;;AAAT,AAAA,IAAAT,aAAA;AAAA,AAAA,OAAA,AAAAA,sBAAAA,WAAA,AAAA,CAAAA,mBAAA,AAAAI,iBAAAD;;;AAAA,CAAA,AAAA,uEAAA,vEAASM,kFAIKM;;AAJd,AAAA,QAAA,JAIYD;AAJZ,AAKI,IAAAE,qBAAc,AAACI,cAAIP;AAAnB,AAAA,GAAA,CAAAG,sBAAA;AAEE,AAAI,AAAOL,oBAAQI;;AAAnB;;AAFF,IAAAE,aAAAD;aAAA,AAAAE,4CAAAD,WAAA,IAAA,pEAAWE;AAAX,AACE,AAAI,CAAMN,iBAAQ,AAACQ,6CAAKR,eAAQM;;AAAI,QAACA,uCAAAA,0CAAAA,LAAEJ,sBAAAA;;;;AAN7C,CAAA,AAAA,uEAAA,vEAASN,kFAQKa,QAAGC;;AARjB,AAAA,QAAA,JAQYT;AARZ,AASI,GAAI,2BAAA,1BAAO,AAASF;AAClB,GAAI,2BAAA,1BAAO,AAASD;AAClB,aAAA,WAAAa,pBAAML;AAAN,AAAS,sFAAAK,sCAAAA,pHAACF,wCAAAA,0DAAAA;;AAAV,AACE,CAAMT,iBAAQ,AAACY,6CAAKZ,eAAQM;;AAD9B;AAAA,AAEG,GAAM,AAACO,0BAAUb,eAAQM;AAAzB,AACE,CAAMN,iBAAQ,AAACQ,6CAAKR,eAAQM;;AAC5B,IAAAQ,WAAI,KAAAC,qBAAA;AAAJ,AAAA,sFAAAD,8BAAAA,5GAACJ,wCAAAA,kDAAAA;;AAFH;;;;AAGH,IAAMM,MAAIlB;AAAV,AACE,CAAMA,iBAAQC;;AACd,CAAMA,iBAAQ,AAAUiB;;AACxB,IAAAC,iBAAI,AAAMD;AAAV,AAAA,+EAAAC,oCAAAA,lHAACR,wCAAAA,wDAAAA;;AAAexB;;;AACpB,AAAI,IAAAiC,iBAAI,AAAMnB;AAAV,AAAA,+EAAAmB,oCAAAA,lHAACT,wCAAAA,wDAAAA;;AAAmBxB;;;;AApB9B,CAAA,wCAAA,xCAASW;AAAT,AAAA,AAAA;;;AAAA,CAAA,8CAAA,9CAASA;;AAAT,CAAA,iDAAA,jDAASA;;AAAT,CAAA,sDAAA,WAAAJ,mBAAAC,qBAAAC,zGAASE;AAAT,AAAA,OAAAD,iBAAAF,qBAAA;;;AAAA;;;oCAAA,pCAASI,gFAAgBC,QACAC,QACAC;AAFzB,AAAA,YAAAJ,6BAAyBE,QACAC,QACAC;;;AAFhBJ,AAsBT,+BAAA,/BAAMuB;AAAN,AAAc,+CAAA,xCAACtB,kCAAO,GAAQ","names":["missionary.impl.Mailbox/nop","unused__11938__auto__","self__","G__40246","js/Error","args40244","cljs.core/aclone","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","missionary.impl.Mailbox/Port","missionary.impl.Mailbox/->Port","enqueue","dequeue","readers","_","t","temp__5806__auto__","vec__40260","cljs.core.nth","!","cljs.core/seq","cljs.core.disj","s!","f!","p1__40243#","cljs.core.conj","cljs.core/contains?","G__40290","js/missionary.Cancelled","tmp","G__40291","G__40292","missionary.impl.Mailbox/make"],"sourcesContent":["(ns missionary.impl.Mailbox\n  (:import missionary.Cancelled))\n\n(defn nop [])\n\n(deftype Port [^:mutable enqueue\n               ^:mutable dequeue\n               ^:mutable readers]\n  IFn\n  (-invoke [_ t]\n    (if-some [[!] (seq readers)]\n      (do (set! readers (disj readers !)) (! t))\n      (do (.push enqueue t) nil)))\n  (-invoke [_ s! f!]\n    (if (zero? (alength dequeue))\n      (if (zero? (alength enqueue))\n        (let [! #(s! %)]\n          (set! readers (conj readers !))\n          #(when (contains? readers !)\n             (set! readers (disj readers !))\n             (f! (Cancelled. \"Mailbox fetch cancelled.\"))))\n        (let [tmp enqueue]\n          (set! enqueue dequeue)\n          (set! dequeue (.reverse tmp))\n          (s! (.pop tmp)) nop))\n      (do (s! (.pop dequeue)) nop))))\n\n(defn make [] (->Port (array) (array) #{}))\n"]}