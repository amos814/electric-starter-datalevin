{"version":3,"sources":["missionary/impl/Dataflow.cljs"],"mappings":";AAGA,+BAAA,/BAAMA;AAAN,AAAA;;AACA,mCAAA,nCAAMC,8EAASC,EAAEC;AAAjB,AAAoB,CAACA,uCAAAA,0CAAAA,LAAED,sBAAAA;;AAAGA;;AAE1B,AAAA;;;;;;;;;;;;AAAA,AAAA,CAAA,AAAA,+CAAA,WAAAE,1DAASU;;AAAT,AAAA,IAAAT,SAAA;AAAA,AAAA,IAAAC,WAAA,CAAA,AAAA,mBAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAD,qCAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qCAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAE,MAAA,CAAA,8DAAA,CAAA,AAAA,mBAAA;;;;;AAAA,CAAA,AAAA,gDAAA,WAAAF,OAAAG,lEAASM;;AAAT,AAAA,IAAAT,aAAA;AAAA,AAAA,OAAA,AAAAA,sBAAAA,WAAA,AAAA,CAAAA,mBAAA,AAAAI,iBAAAD;;;AAAA,CAAA,AAAA,wEAAA,xEAASM,mFAIKM;;AAJd,AAAA,QAAA,JAIYD;AAJZ,AAKI,oBAAUH;AAAV;AAAA,AACE,gBAAA,fAAMA;;AACN,CAAMC,eAAMG;;AACZ,AAACC,+CAAOpB,iCAAQmB,EAAE,AAACE,2BAAYJ;;AAC/B,gBAAA,fAAMA;;;AAAYD;;;AATxB,CAAA,AAAA,wEAAA,xEAASH,mFAUKS,QAAGC;;AAVjB,AAAA,QAAA,JAUYL;AAVZ,AAWI,oBAAIH;AACF,AAAI,CAACO,wCAAAA,sDAAAA,hBAAGN,kCAAAA;;AAAOjB;;AACf,aAAA,WAAAyB,pBAAMtB;AAAN,AAAS,sFAAAsB,sCAAAA,pHAACF,wCAAAA,0DAAAA;;AAAV,AACE,CAAML,eAAM,AAACQ,mDAAMR,aAAMf;;AAD3B;AAAA,AAEG,oBAAUa;AAAV;;AAAA,AACE,GAAM,AAACW,0BAAUT,aAAMf;AAAvB,AACE,CAAMe,eAAM,AAACU,mDAAMV,aAAMf;;AACzB,IAAA0B,WAAI,KAAAC,qBAAA;AAAJ,AAAA,sFAAAD,8BAAAA,5GAACL,wCAAAA,kDAAAA;;AAFH;;;;;;;AAhBX,CAAA,yCAAA,zCAASV;AAAT,AAAA,AAAA;;;AAAA,CAAA,+CAAA,/CAASA;;AAAT,CAAA,kDAAA,lDAASA;;AAAT,CAAA,uDAAA,WAAAJ,mBAAAC,qBAAAC,1GAASE;AAAT,AAAA,OAAAD,iBAAAF,qBAAA;;;AAAA;;;qCAAA,rCAASI,kFAAgBC,MACAC,MACAC;AAFzB,AAAA,YAAAJ,8BAAyBE,MACAC,MACAC;;;AAFhBJ,AAoBT,gCAAA,hCAAMiB;AAAN,AAAc,0CAAA,MAAA,zCAAChB,8CAAiB,qBAAA,rBAACiB","names":["missionary.impl.Dataflow/nop","missionary.impl.Dataflow/send-rf","x","!","unused__11938__auto__","self__","G__40247","js/Error","args40245","cljs.core/aclone","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","missionary.impl.Dataflow/Port","missionary.impl.Dataflow/->Port","bound","value","watch","_","t","cljs.core.reduce","cljs.core/persistent!","s!","f!","p1__40242#","cljs.core.conj_BANG_","cljs.core/contains?","cljs.core.disj_BANG_","G__40289","js/missionary.Cancelled","missionary.impl.Dataflow/make","cljs.core/transient"],"sourcesContent":["(ns missionary.impl.Dataflow\n  (:import missionary.Cancelled))\n\n(defn nop [])\n(defn send-rf [x !] (! x) x)\n\n(deftype Port [^:mutable bound\n               ^:mutable value\n               ^:mutable watch]\n  IFn\n  (-invoke [_ t]\n    (when-not bound\n      (set! bound true)\n      (set! value t)\n      (reduce send-rf t (persistent! watch))\n      (set! watch nil)) value)\n  (-invoke [_ s! f!]\n    (if bound\n      (do (s! value) nop)\n      (let [! #(s! %)]\n        (set! watch (conj! watch !))\n        #(when-not bound\n           (when (contains? watch !)\n             (set! watch (disj! watch !))\n             (f! (Cancelled. \"Dataflow variable dereference cancelled.\"))))))))\n\n(defn make [] (->Port false nil (transient #{})))\n"]}