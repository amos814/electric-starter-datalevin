{"version":3,"sources":["hyperfiddle/rcf/reporters.cljs"],"mappings":";AAGA;;;;;6CAAA,7CAAMA,kGAIHC;AAJH,AAKE,IAAAC,aAAiCD;IAAjCC,iBAAA,AAAAC,4BAAAD;WAAA,AAAAE,4CAAAF,eAAA,lEAAcG;WAAd,AAAAD,4CAAAF,eAAA,lEAAmBI;aAAnB,AAAAF,4CAAAF,eAAA,pEAAwBK;AAAxB,AACE,0DAAA,NAAKF,sDAASC,MAAK,0BAAA,mEAAA,3EAAMC,QAAO,CAAA,gDAASA;;AAG7C,AAAAC,6DAAA,mFAAA,6EAAA,yFAAA,WAAyDP;AAAzD,AACE,mCAAA,nCAACQ;;AACD,mBAAA,ZAACC;;AAEH,AAAAF,6DAAA,mFAAA,6EAAA,0FAAA,WAAyDP;AAAzD,AACE,OAACO,2BAAS,gDAAA,qDAAA,rGAACG,8CAAMV;;AAGnB,AAAAO,6DAAA,mFAAA,uFAAA,yFAAA,WAAsEP;AAAtE,AACE,OAACO,2BAAS,gDAAA,qDAAA,rGAACG,8CAAMV;;AAEnB,AAAAO,6DAAA,mFAAA,uFAAA,0FAAA,WAAsEP;AAAtE,AACE,OAACO,2BAAS,gDAAA,qDAAA,rGAACG,8CAAMV","names":["hyperfiddle.rcf.reporters/testing-vars-str","m","map__37404","cljs.core/--destructure-map","cljs.core.get","file","line","column","cljs.test/report","cljs.test/inc-report-counter!","js/console.log","cljs.core.assoc"],"sourcesContent":["(ns hyperfiddle.rcf.reporters\n  (:require [cljs.test :as t]))\n\n(defn testing-vars-str\n  \"Returns a string representation of the current test.  Renders names\n  in *testing-vars* as a list, then the source file and line of\n  current assertion.\"\n  [m]\n  (let [{:keys [file line column]} m]\n    (str file \":\" line (when column (str \":\" column)))))\n\n;; For js console.\n(defmethod t/report [::t/default :hyperfiddle.rcf/pass] [m]\n  (t/inc-report-counter! :pass)\n  (js/console.log \"\u2705\"))\n\n(defmethod t/report [::t/default :hyperfiddle.rcf/fail] [m]\n  (t/report (assoc m :type :fail)))\n\n;; Shadow cljs + karma test runner\n(defmethod t/report [:shadow.test.karma/karma :hyperfiddle.rcf/pass] [m]\n  (t/report (assoc m :type :pass)))\n\n(defmethod t/report [:shadow.test.karma/karma :hyperfiddle.rcf/fail] [m]\n  (t/report (assoc m :type :fail)))\n"]}